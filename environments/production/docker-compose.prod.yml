version: '3.8'

services:
  app:
    build: 
      context: ../../
      dockerfile: Dockerfile
    restart: always
    environment:
      - NODE_ENV=production
    volumes:
      - ../../logs:/app/logs
      - ../../uploads:/app/uploads
      - ./.env:/app/.env
    depends_on:
      - db
      - redis
    networks:
      - app-network
    
  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - ../../uploads:/var/www/uploads
      - /etc/letsencrypt:/etc/letsencrypt
    depends_on:
      - app
    restart: always
    networks:
      - app-network
    
  db:
    image: postgres:15-alpine
    restart: always
    environment:
      - POSTGRES_DB=${DB_NAME}
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ../../backups:/backups
    networks:
      - app-network
    
  redis:
    image: redis:7-alpine
    restart: always
    command: redis-server --requirepass ${REDIS_PASSWORD} --appendonly yes
    volumes:
      - redis_data:/data
    networks:
      - app-network
  
  # 監視・管理ツール
  portainer:
    image: portainer/portainer-ce:latest
    ports:
      - "9000:9000"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - portainer_data:/data
    restart: always
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  postgres_data:
  redis_data:
  portainer_data: